apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: argilla-server
spec:
  replicas: {{ .Values.replicas.min }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: argilla-server
  template:
    metadata:
      labels:
        {{- include "library-chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: argilla-server
    spec:
      initContainers:
        - name: wait-for-redis
          image: alpine/curl:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              until echo PING | nc $REDIS_URL 6379;
              do
                echo Redis not ready. Sleeping...
                sleep 5
              done
              echo Redis up!
          env:
            - name: REDIS_URL
              value: "{{ include "library-chart.fullname" . }}-redis"
        - name: wait-for-elasticsearch
          image: ubuntu:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              status_code=
              while [ $status_code -ne 200 ]
                do sleep 5
                status_code=$(curl -s -o /dev/null -w '%{http_code}' $ELASTICSEARCH_URL)
                echo Elasticsearch not ready. Sleeping...
              done
              echo Elasticsearch up!
          env:
            - name: ELASTICSEARCH_URL
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
        - name: wait-for-postgresql
          image: alpine/curl:latest
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c"]
          args:
            - |
              until echo PING | nc $POSTGRES_HOSTNAME 5432;
              do
                echo Postgres not ready. Sleeping...
                sleep 5
              done
              echo Postgres up!
          env:
            - name: POSTGRES_HOSTNAME
              value: "{{ include "library-chart.fullname" . }}-postgresql"
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
      containers:
        - name: argilla-server
          image: "argilla/argilla-server:v2.2.0"
          imagePullPolicy: {{ .Values.argilla.image.pullPolicy | quote }}
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-login
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-login
                  key: password
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-login
                  key: apikey
            - name: ARGILLA_HOME_PATH
              value: "/var/lib/argilla"
            - name: ARGILLA_ELASTICSEARCH
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
            - name: ARGILLA_REDIS_URL
              value: "redis://{{ include "library-chart.fullname" . }}-redis:6379/0"
            - name: ARGILLA_DATABASE_URL
              value: "postgresql+asyncpg://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "library-chart.fullname" . }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
          ports:
            - containerPort: 6900
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
