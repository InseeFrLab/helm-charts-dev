apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: argilla-server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: argilla-server
  template:
    metadata:
      labels:
        {{- include "library-chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: argilla-server
    spec:
      initContainers:
        - name: wait-for-elasticsearch
          image: alpine/curl:latest
          command: [ "sh", "-c"]
          args:
            - |
              status_code=$(curl -s -o /dev/null -w '%{http_code}' $ELASTICSEARCH_URL)
              while [ $status_code -ne 200 ]
                do sleep 5
                status_code=$(curl -s -o /dev/null -w '%{http_code}' $ELASTICSEARCH_URL)
                echo Sleeping...
              done
              echo Elasticsearch Connected"
          env:
            - name: ELASTICSEARCH_URL
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
      containers:
        - name: argilla-server
          image: "argilla/argilla-server:v2.2.0"
          imagePullPolicy: {{ .Values.argilla.image.pullPolicy | quote }}
          env:
            - name: USERNAME
              value: {{ .Values.argilla.env.USERNAME }}
            - name: PASSWORD
              value: {{ .Values.argilla.env.PASSWORD }}
            - name: ARGILLA_AUTH_SECRET_KEY
              value: {{ .Values.argilla.env.PASSWORD }}
            - name: ARGILLA_HOME_PATH
              value: {{ .Values.argilla.env.ARGILLA_HOME_PATH }}
            - name: ARGILLA_ELASTICSEARCH
              value: "http://{{ include "library-chart.fullname" . }}-elasticsearch:9200"
            {{- with .Values.argilla.env.API_KEY }}
            - name: API_KEY
              value: {{ . }}
            {{- end }}
          ports:
            - containerPort: 6900
          resources:
            requests:
              cpu: 50m
            limits:
              cpu: 100m
